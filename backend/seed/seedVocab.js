const mongoose = require("mongoose");
const Vocab = require("../models/Vocab");

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
mongoose.connect(process.env.MONGODB_URL || "mongodb+srv://2755petchanan_db_user:19202546@cluster0.lu8vz2p.mongodb.net/thai-meow?retryWrites=true&w=majority&appName=Cluster0");

const consonants = [
  { thai: "‡∏Å", name: "‡∏Å‡∏≠-‡πÑ‡∏Å‡πà", meaningTH: "‡πÑ‡∏Å‡πà", meaningEN: "chicken", roman: "gor-gai" },
  { thai: "‡∏Ç", name: "‡∏Ç‡∏≠-‡πÑ‡∏Ç‡πà", meaningTH: "‡πÑ‡∏Ç‡πà", meaningEN: "egg", roman: "khor-khai" },
  { thai: "‡∏É", name: "‡∏É‡∏≠-‡∏É‡∏ß‡∏î", meaningTH: "‡∏É‡∏ß‡∏î", meaningEN: "bottle", roman: "khor-khwad" },
  { thai: "‡∏Ñ", name: "‡∏Ñ‡∏≠-‡∏Ñ‡∏ß‡∏≤‡∏¢", meaningTH: "‡∏Ñ‡∏ß‡∏≤‡∏¢", meaningEN: "buffalo", roman: "khor-khwai" },
  { thai: "‡∏Ö", name: "‡∏Ö‡∏≠-‡∏Ö‡∏ô", meaningTH: "‡∏Ö‡∏ô", meaningEN: "person", roman: "khor-khon" },
  { thai: "‡∏Ü", name: "‡∏Ü‡∏≠-‡∏£‡∏∞‡∏Ü‡∏±‡∏á", meaningTH: "‡∏£‡∏∞‡∏Ü‡∏±‡∏á", meaningEN: "bell", roman: "khor-rakhang" },
  { thai: "‡∏á", name: "‡∏á‡∏≠-‡∏á‡∏π", meaningTH: "‡∏á‡∏π", meaningEN: "snake", roman: "ngor-ngoo" },
  { thai: "‡∏à", name: "‡∏à‡∏≠-‡∏à‡∏≤‡∏ô", meaningTH: "‡∏à‡∏≤‡∏ô", meaningEN: "plate", roman: "jor-jaan" },
  { thai: "‡∏â", name: "‡∏â‡∏≠-‡∏â‡∏¥‡πà‡∏á", meaningTH: "‡∏â‡∏¥‡πà‡∏á", meaningEN: "cymbal", roman: "chor-ching" },
  { thai: "‡∏ä", name: "‡∏ä‡∏≠-‡∏ä‡πâ‡∏≤‡∏á", meaningTH: "‡∏ä‡πâ‡∏≤‡∏á", meaningEN: "elephant", roman: "chor-chang" },
  { thai: "‡∏ã", name: "‡∏ã‡∏≠-‡πÇ‡∏ã‡πà", meaningTH: "‡πÇ‡∏ã‡πà", meaningEN: "chain", roman: "sor-so" },
  { thai: "‡∏å", name: "‡∏å‡∏≠-‡πÄ‡∏å‡∏≠", meaningTH: "‡πÄ‡∏å‡∏≠", meaningEN: "tree", roman: "chor-choe" },
  { thai: "‡∏ç", name: "‡∏ç‡∏≠-‡∏´‡∏ç‡∏¥‡∏á", meaningTH: "‡∏´‡∏ç‡∏¥‡∏á", meaningEN: "woman", roman: "yor-ying" },
  { thai: "‡∏é", name: "‡∏é‡∏≠-‡∏ä‡∏é‡∏≤", meaningTH: "‡∏ä‡∏é‡∏≤", meaningEN: "crown", roman: "dor-chada" },
  { thai: "‡∏è", name: "‡∏è‡∏≠-‡∏õ‡∏è‡∏±‡∏Å", meaningTH: "‡∏õ‡∏è‡∏±‡∏Å", meaningEN: "goad", roman: "dor-patak" },
  { thai: "‡∏ê", name: "‡∏ê‡∏≠-‡∏ê‡∏≤‡∏ô", meaningTH: "‡∏ê‡∏≤‡∏ô", meaningEN: "base", roman: "thor-than" },
  { thai: "‡∏ë", name: "‡∏ë‡∏≠-‡∏°‡∏ì‡πÇ‡∏ë", meaningTH: "‡∏°‡∏ì‡πÇ‡∏ë", meaningEN: "Mandodari", roman: "thor-mon-tho" },
  { thai: "‡∏í", name: "‡∏í‡∏≠-‡∏ú‡∏π‡πâ‡πÄ‡∏í‡πà‡∏≤", meaningTH: "‡∏ú‡∏π‡πâ‡πÄ‡∏í‡πà‡∏≤", meaningEN: "elder", roman: "thor-phu-thao" },
  { thai: "‡∏ì", name: "‡∏ì‡∏≠-‡πÄ‡∏ì‡∏£", meaningTH: "‡πÄ‡∏ì‡∏£", meaningEN: "novice", roman: "nor-nen" },
  { thai: "‡∏î", name: "‡∏î‡∏≠-‡πÄ‡∏î‡πá‡∏Å", meaningTH: "‡πÄ‡∏î‡πá‡∏Å", meaningEN: "child", roman: "dor-dek" },
  { thai: "‡∏ï", name: "‡∏ï‡∏≠-‡πÄ‡∏ï‡πà‡∏≤", meaningTH: "‡πÄ‡∏ï‡πà‡∏≤", meaningEN: "turtle", roman: "tor-tao" },
  { thai: "‡∏ñ", name: "‡∏ñ‡∏≠-‡∏ñ‡∏∏‡∏á", meaningTH: "‡∏ñ‡∏∏‡∏á", meaningEN: "bag", roman: "thor-thung" },
  { thai: "‡∏ó", name: "‡∏ó‡∏≠-‡∏ó‡∏´‡∏≤‡∏£", meaningTH: "‡∏ó‡∏´‡∏≤‡∏£", meaningEN: "soldier", roman: "thor-thahan" },
  { thai: "‡∏ò", name: "‡∏ò‡∏≠-‡∏ò‡∏á", meaningTH: "‡∏ò‡∏á", meaningEN: "flag", roman: "thor-thong" },
  { thai: "‡∏ô", name: "‡∏ô‡∏≠-‡∏´‡∏ô‡∏π", meaningTH: "‡∏´‡∏ô‡∏π", meaningEN: "mouse", roman: "nor-nu" },
  { thai: "‡∏ö", name: "‡∏ö‡∏≠-‡πÉ‡∏ö‡πÑ‡∏°‡πâ", meaningTH: "‡πÉ‡∏ö‡πÑ‡∏°‡πâ", meaningEN: "leaf", roman: "bor-bai-mai" },
  { thai: "‡∏õ", name: "‡∏õ‡∏≠-‡∏õ‡∏•‡∏≤", meaningTH: "‡∏õ‡∏•‡∏≤", meaningEN: "fish", roman: "por-pla" },
  { thai: "‡∏ú", name: "‡∏ú‡∏≠-‡∏ú‡∏∂‡πâ‡∏á", meaningTH: "‡∏ú‡∏∂‡πâ‡∏á", meaningEN: "bee", roman: "phor-phueng" },
  { thai: "‡∏ù", name: "‡∏ù‡∏≠-‡∏ù‡∏≤", meaningTH: "‡∏ù‡∏≤", meaningEN: "lid", roman: "for-fa" },
  { thai: "‡∏û", name: "‡∏û‡∏≠-‡∏û‡∏≤‡∏ô", meaningTH: "‡∏û‡∏≤‡∏ô", meaningEN: "tray", roman: "phor-phan" },
  { thai: "‡∏ü", name: "‡∏ü‡∏≠-‡∏ü‡∏±‡∏ô", meaningTH: "‡∏ü‡∏±‡∏ô", meaningEN: "tooth", roman: "for-fan" },
  { thai: "‡∏†", name: "‡∏†‡∏≠-‡∏™‡∏≥‡πÄ‡∏†‡∏≤", meaningTH: "‡∏™‡∏≥‡πÄ‡∏†‡∏≤", meaningEN: "junk", roman: "phor-sam-phao" },
  { thai: "‡∏°", name: "‡∏°‡∏≠-‡∏°‡πâ‡∏≤", meaningTH: "‡∏°‡πâ‡∏≤", meaningEN: "horse", roman: "mor-ma" },
  { thai: "‡∏¢", name: "‡∏¢‡∏≠-‡∏¢‡∏±‡∏Å‡∏©‡πå", meaningTH: "‡∏¢‡∏±‡∏Å‡∏©‡πå", meaningEN: "giant", roman: "yor-yak" },
  { thai: "‡∏£", name: "‡∏£‡∏≠-‡πÄ‡∏£‡∏∑‡∏≠", meaningTH: "‡πÄ‡∏£‡∏∑‡∏≠", meaningEN: "boat", roman: "ror-ruea" },
  { thai: "‡∏•", name: "‡∏•‡∏≠-‡∏•‡∏¥‡∏á", meaningTH: "‡∏•‡∏¥‡∏á", meaningEN: "monkey", roman: "lor-ling" },
  { thai: "‡∏ß", name: "‡∏ß‡∏≠-‡πÅ‡∏´‡∏ß‡∏ô", meaningTH: "‡πÅ‡∏´‡∏ß‡∏ô", meaningEN: "ring", roman: "wor-waen" },
  { thai: "‡∏®", name: "‡∏®‡∏≠-‡∏®‡∏≤‡∏•‡∏≤", meaningTH: "‡∏®‡∏≤‡∏•‡∏≤", meaningEN: "pavilion", roman: "sor-sala" },
  { thai: "‡∏©", name: "‡∏©‡∏≠-‡∏§‡∏≤‡∏©‡∏µ", meaningTH: "‡∏§‡∏≤‡∏©‡∏µ", meaningEN: "hermit", roman: "sor-ruesi" },
  { thai: "‡∏™", name: "‡∏™‡∏≠-‡πÄ‡∏™‡∏∑‡∏≠", meaningTH: "‡πÄ‡∏™‡∏∑‡∏≠", meaningEN: "tiger", roman: "sor-suea" },
  { thai: "‡∏´", name: "‡∏´‡∏≠-‡∏´‡∏µ‡∏ö", meaningTH: "‡∏´‡∏µ‡∏ö", meaningEN: "box", roman: "hor-hip" },
  { thai: "‡∏¨", name: "‡∏¨‡∏≠-‡∏à‡∏∏‡∏¨‡∏≤", meaningTH: "‡∏à‡∏∏‡∏¨‡∏≤", meaningEN: "kite", roman: "lor-chu-la" },
  { thai: "‡∏≠", name: "‡∏≠‡∏≠-‡∏≠‡πà‡∏≤‡∏á", meaningTH: "‡∏≠‡πà‡∏≤‡∏á", meaningEN: "basin", roman: "or-ang" },
  { thai: "‡∏Æ", name: "‡∏Æ‡∏≠-‡∏ô‡∏Å‡∏Æ‡∏π‡∏Å", meaningTH: "‡∏ô‡∏Å‡∏Æ‡∏π‡∏Å", meaningEN: "owl", roman: "hor-nok-huk" }
];

(async () => {
  try {
    console.log("üå± Starting to seed consonants...");
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    await Vocab.deleteMany({ type: "consonant" });
    console.log("üóëÔ∏è Cleared existing consonants");
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    const consonantData = consonants.map(c => ({
      ...c,
      type: "consonant",
      level: "Beginner",
      lessonKey: "consonants_basic",
      category: "‡∏û‡∏¢‡∏±‡∏ç‡∏ä‡∏ô‡∏∞",
      audioText: c.name,
      imageUrl: `/assets/letters/${c.thai}.jpg`
    }));
    
    await Vocab.insertMany(consonantData);
    console.log(`‚úÖ Seeded ${consonants.length} consonants successfully!`);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const sample = await Vocab.findOne({ thai: "‡∏Å" }).lean();
    console.log("üìù Sample data:", sample);
    
    process.exit(0);
  } catch (error) {
    console.error("‚ùå Error seeding consonants:", error);
    process.exit(1);
  }
})();
